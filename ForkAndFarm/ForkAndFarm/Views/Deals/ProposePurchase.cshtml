@model ForkAndFarm.Models.Deal

@{
    ViewBag.Title = "ProposePurchase";
}

<h2>ProposePurchase</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Make as Offer</h4>
        <h3>@Model.OfferedTo</h3>
        <h3>@Model.Product</h3>
        <h3>@Model.Quantity @Model.Unit  of @Model.Product at @Model.UnitPrice per @Model.Unit for delivery on @Model.Delivery</h3>
        <h3>Payment Terms: @Model.PaymentTerms</h3>
        <h3>Total Price: <span id="extprice"></span></h3>
        <script>
            var total = @Model.Quantity * @Model.UnitPrice;
            document.getElementById("extprice").innerHTML = total;
        </script>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

       

       

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delivery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
            </div>
        </div>

      

       

        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>

       
      

       
        
        <div class="form-group">
            @Html.LabelFor(model => model.OfferId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.OfferId)
                    @Html.ValidationMessageFor(model => model.OfferId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
