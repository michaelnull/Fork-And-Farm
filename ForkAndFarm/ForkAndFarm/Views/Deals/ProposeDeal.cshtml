@model ForkAndFarm.Models.Deal

@{
    ViewBag.Title = "ProposeDeal";
}

<h2>ProposeDeal</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.OfferId)
    @Html.HiddenFor(model => model.OfferedTo)
    @Html.HiddenFor(model => model.ProposedBy)
    @Html.HiddenFor(model => model.ProposedByOrganization)
    @Html.HiddenFor(model => model.ProposedByPhone)
    @Html.HiddenFor(model => model.Product)
    @Html.HiddenFor(model => model.Unit)
    @Html.HiddenFor(model => model.PaymentTerms)

    <div class="form-horizontal green">
        <h4>Deal</h4>
        <h3>@Model.OfferedTo</h3>
        <h3>@Model.Product</h3>
        <h3>@Model.Quantity @Model.Unit  of @Model.Product at @String.Format("{0:C}", Model.UnitPrice) per @Model.Unit for delivery on @String.Format("{0:d}", Model.Delivery)</h3>
        <h3>Payment Terms: @Model.PaymentTerms</h3>
        <h3>Total Price: @String.Format("{0:C}", Model.ExtPrice)</h3> 
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

       


       

        

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Delivery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentTerms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentTerms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentTerms, "", new { @class = "text-danger" })
            </div>
        </div>

     
        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Advertisements")
</div>
